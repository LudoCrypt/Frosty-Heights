plugins {
	id 'maven-publish'
	alias(libs.plugins.quilt.loom)
}

archivesBaseName = project.archives_base_name
version = project.version
group = project.maven_group

repositories {
	maven {
		url = 'https://ladysnake.jfrog.io/artifactory/mods/'
    }
	maven {
		url = 'https://jitpack.io/'
    }
	maven {
		url = 'https://maven.shedaniel.me/'
	}
	maven {
		url = 'https://maven.terraformersmc.com/'
	}
	maven {
		url 'https://api.modrinth.com/maven/'
    }
}

dependencies {
	minecraft libs.minecraft
	mappings "org.quiltmc:quilt-mappings:${libs.versions.quilt.mappings.get()}:intermediary-v2"

	modImplementation libs.quilt.loader

	modImplementation libs.quilted.fabric.api

	includeMod libs.ladysnake.satin
	modImplementation libs.terraformersmc.modmenu

	includeMod libs.midnight.lib

	includeMod libs.ludocrypt.limlib.effects
	includeMod libs.ludocrypt.limlib.registry
	includeMod libs.ludocrypt.limlib.render
	includeMod libs.ludocrypt.limlib.world
}

def includeMod(var dep) {
	dependencies.modImplementation(dep)
	dependencies.include(dep)
}

processResources {
	inputs.property "version", version

	filesMatching('quilt.mod.json') {
		expand "version": version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	it.options.release = 17
}

java {
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17

	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${archivesBaseName}" }
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	repositories {
	}
}
